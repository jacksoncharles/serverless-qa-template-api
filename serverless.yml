service: forum-service

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  region: eu-west-1

  environment:
    DYNAMODB_THREAD_TABLE: Thread
    DYNAMODB_REPLY_TABLE: Reply

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"
      
functions:

  threadCreate:
    handler: api/threads/threadCreate.threadCreate
    memorySize: 128
    description: Submit thread.
    events:
      - http: 
          path: threads
          method: post
          cors: true

  threadList:
    handler: api/threads/threadList.threadList
    memorySize: 128
    description: Retrieve a paginated list of threads.
    events:
      - http:
          path: threads
          method: get
          cors: true

  threadUpdate:
    handler: api/threads/threadUpdate.threadUpdate
    events:
      - http:
          path: threads/{id}
          method: put
          cors: true

  threadGet:
    handler: api/threads/threadGet.threadGet
    events:
      - http:
          path: threads/{id}
          method: get
          cors: true

  threadDelete:
    handler: api/threads/threadDelete.threadDelete
    events:
      - http:
          path: threads/{id}
          method: delete
          cors: true

  replyCreate:
    handler: api/replies/replyCreate.replyCreate
    memorySize: 128
    description: Submit post information.
    events:
      - http: 
          path: replies
          method: post
          cors: true

  replyList:
    handler: api/replies/replyList.replyList
    memorySize: 128
    description: Retrieve a paginated list of replies by the value of Id
    events:
      - http:
          path: replies
          method: get
          cors: true

  replyUpdate:
    handler: api/replies/replyUpdate.replyUpdate
    events:
      - http:
          path: replies/{id}
          method: put
          cors: true

  replyGet:
    handler: api/replies/replyGet.replyGet
    events:
      - http:
          path: replies/{id}
          method: get
          cors: true

  replyDelete:
    handler: api/replies/replyDelete.replyDelete
    events:
      - http:
          path: replies/{id}
          method: delete
          cors: true

resources:
  Resources:
    ThreadDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "Id"
            AttributeType: "S"
          -
            AttributeName: "ForumId"
            AttributeType: "S"            
          -
            AttributeName: "UserId"
            AttributeType: "S"
          -
            AttributeName: "CreatedDateTime"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "Id"
            KeyType: "HASH"
          -
            AttributeName: "CreatedDateTime"
            KeyType: "RANGE"
        GlobalSecondaryIndexes:
          -
            IndexName: ForumIndex
            KeySchema:
              -
                AttributeName: "ForumId"
                KeyType: HASH
              -
                AttributeName: "CreatedDateTime"
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          -
            IndexName: UserIndex
            KeySchema:
              -
                AttributeName: "UserId"
                KeyType: HASH
              -
                AttributeName: "CreatedDateTime"
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: Thread
    ReplyDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "Id"
            AttributeType: "S"
          -
            AttributeName: "ThreadId"
            AttributeType: "S"
          -
            AttributeName: "UserId"
            AttributeType: "S"
          -
            AttributeName: "CreatedDateTime"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "Id"
            KeyType: "HASH"
        GlobalSecondaryIndexes:
          -
            IndexName: ThreadIndex
            KeySchema:
              -
                AttributeName: "ThreadId"
                KeyType: HASH
              -
                AttributeName: "CreatedDateTime"
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          -
            IndexName: UserIndex
            KeySchema:
              -
                AttributeName: "UserId"
                KeyType: HASH
              -
                AttributeName: "CreatedDateTime"
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: Reply